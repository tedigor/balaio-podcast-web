{"version":3,"sources":["components/episodes-title/EpisodesTitle.js","components/episodes-table/EpisodesTable.js","modules/private/episodes/Episodes.js"],"names":["useStyles","makeStyles","root","width","display","flexDirection","padding","marginBottom","texts","textAlign","EpisodesTitle","title","classes","className","variant","component","StyledTableCell","withStyles","theme","head","backgroundColor","color","body","fontSize","TableCell","StyledTableRow","palette","action","hover","TableRow","table","minWidth","EpisodesTable","useState","episodes","setEpisodes","history","useHistory","useEffect","http","get","API_ENDPOINTS","then","response","data","map","ep","navigateTo","route","push","IconButton","aria-label","onClick","TableContainer","Paper","Table","TableHead","align","TableBody","row","key","name","Checkbox","onChange","e","episode","checked","target","put","_id","isHighlighted","res","handleisHighlightedChange","scope","date","episodeNumber","style","maxWidth","description","href","imageUrl","episodeSrc","margin","active","id","delete","Episodes"],"mappings":"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","file":"static/js/11.3f5226ac.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: \"100%\",\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '0 15vw',\n        marginBottom: '7vh'\n    },\n    texts: {\n        textAlign: 'start',\n    }\n});\n\nconst EpisodesTitle = ({ title }) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <div className={classes.texts}>\n                <Typography variant=\"h3\" component=\"h3\" >\n                    Episódios\n\t\t\t    </Typography>\n            </div>\n        </div>\n    );\n};\n\nexport default EpisodesTitle;","import React, { useEffect, useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport API_ENDPOINTS from '../../core/http/api-endpoints';\nimport http from '../../core/http/axios';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Add from '@material-ui/icons/Add';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Done from '@material-ui/icons/Done'\nimport EditIcon from '@material-ui/icons/Edit'\nimport CheckCircle from '@material-ui/icons/CheckCircle'\nimport { useHistory } from 'react-router-dom';\n\nimport './EpisodesTable.scss';\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: '#ffc000',\n        color: '#662c00',\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 700,\n    },\n});\n\nconst EpisodesTable = () => {\n    const classes = useStyles();\n\n    const [episodes, setEpisodes] = useState([]);\n    const history = useHistory();\n\n    useEffect(() => {\n        http.get(API_ENDPOINTS.episodes).then((response) => {\n            setEpisodes(\n                response.data.map(ep => {\n                    return {\n                        ...ep\n                    }\n                })\n            );\n        })\n\n    }, [])\n\n    const navigateTo = (route) => {\n        history.push(route);\n    }\n\n    const handleisHighlightedChange = (e, episode) => {\n        const { checked } = e.target;\n        http.put(`${API_ENDPOINTS.episodes}/${episode._id}/highlight`, { isHighlighted: checked })\n            .then(res => {\n                return episodes.map(ep => {\n                    if (ep._id === res.data._id) {\n                        ep.isHighlighted = checked;\n                    }\n                    return ep;\n                })\n            }).then(res => {\n                setEpisodes(res);\n            })\n\n    }\n\n    const deactivateEp = (id) => {\n        http.delete(`${API_ENDPOINTS.episodes}/${id}`).then(res => {\n            return episodes.map(ep => {\n                if (ep._id === id) {\n                    ep.active = false;\n                }\n                return ep;\n            })\n        }).then(res => {\n            setEpisodes(res);\n        })\n    }\n\n    const activeEp = (id) => {\n        http.put(`${API_ENDPOINTS.episodes}/${id}/activate`).then(res => {\n            return episodes.map(ep => {\n                if (ep._id === id) {\n                    ep.active = true;\n                }\n                return ep;\n            })\n        }).then(res => {\n            setEpisodes(res);\n        })\n    }\n\n    return episodes ? (\n        <div className=\"episodes-container\">\n            <div className=\"title\">\n                <h2>Lista de episódios</h2>\n                <IconButton color=\"primary\" className=\"add-button\" aria-label=\"delete\" onClick={() => navigateTo('/private/episodes/new')}>\n                    <Add />\n                </IconButton>\n            </div>\n            <div className=\"episodes-table\">\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"customized table\">\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell align=\"left\">Destaque</StyledTableCell>\n                                <StyledTableCell>Nome</StyledTableCell>\n                                <StyledTableCell align=\"left\">Data</StyledTableCell>\n                                <StyledTableCell align=\"left\">Número</StyledTableCell>\n                                <StyledTableCell align=\"left\">Descrição</StyledTableCell>\n                                <StyledTableCell align=\"left\">ImagemUrl</StyledTableCell>\n                                <StyledTableCell align=\"left\">Link do Episódio</StyledTableCell>\n                                <StyledTableCell align=\"left\">Ações</StyledTableCell>\n                                <StyledTableCell align=\"left\">Ativo</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {episodes.map((row) => (\n                                <StyledTableRow key={row.name} >\n                                    <StyledTableCell align=\"left\">\n                                        <Checkbox\n                                            onChange={(e) => handleisHighlightedChange(e, row)}\n                                            checked={row.isHighlighted}\n                                        />\n                                    </StyledTableCell>\n                                    <StyledTableCell component=\"th\" scope=\"row\">\n                                        {row.name}\n                                    </StyledTableCell>\n                                    <StyledTableCell component=\"th\" scope=\"row\">\n                                        {row.date}\n                                    </StyledTableCell>\n                                    <StyledTableCell component=\"th\" scope=\"row\">\n                                        {row.episodeNumber}\n                                    </StyledTableCell>\n                                    <StyledTableCell style={{ maxWidth: '350px' }} align=\"left\">{row.description}</StyledTableCell>\n\n                                    <StyledTableCell style={{ maxWidth: '350px' }} component=\"th\" scope=\"row\">\n                                        <a href={row.imageUrl}>{row.imageUrl}</a>\n                                    </StyledTableCell>\n                                    <StyledTableCell style={{ maxWidth: '350px' }} component=\"th\" scope=\"row\">\n                                        <a href={row.episodeSrc}>{row.episodeSrc}</a>\n                                    </StyledTableCell>\n                                    <StyledTableCell style={{ maxWidth: '350px' }} component=\"th\" scope=\"row\">\n                                        <IconButton aria-label=\"delete\" className={classes.margin} onClick={() => navigateTo(`/private/episodes/edit/${row._id}`)}>\n                                            <EditIcon />\n                                        </IconButton>\n                                        {\n                                            row.active ? \n                                                <IconButton aria-label=\"delete\" className={classes.margin} onClick={() => deactivateEp(row._id)} >\n                                                    <DeleteIcon />\n                                                </IconButton> :\n                                                <IconButton aria-label=\"delete\" className={classes.margin} onClick={() => activeEp(row._id)} >\n                                                    <Done />\n                                                </IconButton>\n                                        }\n\n                                    </StyledTableCell>\n                                    <StyledTableCell align=\"left\">\n                                        <CheckCircle style={{ color: row.active ? '#28a745' : '#343a40' }} />\n                                    </StyledTableCell>\n                                </StyledTableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </div>\n    ) : null;\n}\n\nexport default EpisodesTable;","import React from \"react\";\n\nimport EpisodesTitle from \"../../../components/episodes-title/EpisodesTitle\";\nimport EpisodesTable from \"../../../components/episodes-table/EpisodesTable\";\n\nconst Episodes = () => {\n    return (\n        <div className=\"home\">\n            <EpisodesTitle />\n            <EpisodesTable />\n        </div>\n    );\n};\n\nexport default Episodes;"],"sourceRoot":""}