{"version":3,"sources":["shared/components/custom-button/CustomButton.js","shared/components/form-input/FormInput.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","components/episodes-title/EpisodesTitle.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","components/episodes-form/EpisodesForm.js"],"names":["theme","createMuiTheme","typography","button","palette","primary","light","main","dark","contrastText","secondary","useStyles","makeStyles","margin","spacing","CustomButton","variant","children","color","props","classes","className","root","FormInput","handleChange","label","placeholder","onChange","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","React","ref","_props$align","align","_props$color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","concat","capitalize","withStyles","caption","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","colorSecondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","flexDirection","padding","texts","EpisodesTitle","title","SwitchBase","autoFocus","checkedProp","checked","checkedIcon","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","onBlur","onFocus","readOnly","required","tabIndex","type","value","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","role","undefined","event","input","newChecked","target","cursor","opacity","top","left","zIndex","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","size","fontSize","backgroundColor","fade","action","hoverOpacity","FormControlLabel","control","_props$labelPlacement","labelPlacement","controlProps","forEach","key","alignItems","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","labelPlacementTop","labelPlacementBottom","EpisodesForm","useParams","history","useHistory","useState","episodeForm","setEpisodeForm","useEffect","http","get","API_ENDPOINTS","publicEpisodes","then","res","data","description","imageUrl","episodeNumber","time","date","episodeSrc","isHighlighted","e","checkErrors","navigate","push","onSubmit","preventDefault","put","episodes","post","multiline"],"mappings":"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","file":"static/js/7.bf30166b.chunk.js","sourcesContent":["import React from 'react'\n\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\n\nconst theme = createMuiTheme({\n  typography: {\n    button: {\n    }\n  },\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#ffc000',\n      dark: '#e2b11a',\n      contrastText: '#662c00',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst CustomButton = ({ variant, children, color, ...props }) => {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n      <Button variant={variant} color={color} className={classes.margin} {...props}>\n        {children}\n      </Button>\n    </ThemeProvider>\n  )\n};\n\nexport default CustomButton;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nimport './FormInput.scss';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst FormInput = ({ handleChange, label, placeholder, variant, ...props }) => {\n\n  const classes = useStyles();\n\n  return (\n    <TextField\n      className={classes.root}\n      label={label}\n      variant={variant ? variant : \"filled\"}\n      {...props}\n      onChange={handleChange}\n      placeholder={placeholder} />);\n}\n\nexport default FormInput;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import React from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: \"100%\",\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '0 15vw',\n        marginBottom: '7vh'\n    },\n    texts: {\n        textAlign: 'start',\n    }\n});\n\nconst EpisodesTitle = ({ title }) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <div className={classes.texts}>\n                <Typography variant=\"h3\" component=\"h3\" >\n                    Episódios\n\t\t\t    </Typography>\n            </div>\n        </div>\n    );\n};\n\nexport default EpisodesTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport './EpisodesForm.scss';\n\nimport FormInput from '../../shared/components/form-input/FormInput';\nimport CustomButton from '../../shared/components/custom-button/CustomButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport http from '../../core/http/axios';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport API_ENDPOINTS from '../../core/http/api-endpoints';\nimport EpisodesTitle from '../episodes-title/EpisodesTitle';\n\n\nconst EpisodesForm = (props) => {\n\n    const { id } = useParams();\n    const history = useHistory();\n\n    const [episodeForm, setEpisodeForm] = useState();\n\n    useEffect(() => {\n        if (!id) {\n            setEpisodeForm({\n                name: '',\n                description: '',\n                imageUrl: '',\n                episodeNumber: '',\n                time: '',\n                date: '',\n                episodeSrc: '',\n                isHighlighted: true\n            })\n        } else {\n            http.get(`${API_ENDPOINTS.publicEpisodes}/${id}`).then(res => {\n                return res.data;\n            }).then(res => {\n                setEpisodeForm(res);\n            });\n        }\n    }, [id]);\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setEpisodeForm({ ...episodeForm, [name]: value });\n        checkErrors();\n    }\n\n    const handleCheckChange = e => {\n        const { checked } = e.target;\n        setEpisodeForm({ ...episodeForm, isHighlighted: checked });\n        checkErrors();\n    }\n\n    const navigate = () => {\n        history.push('/private/episodes');\n    }\n\n    const hadleSubmit = event => {\n        event.preventDefault();\n        if (id) {\n            http.put(`${API_ENDPOINTS.episodes}/${id}`, episodeForm).then(navigate);\n        } else {\n            http.post(API_ENDPOINTS.episodes, episodeForm).then(navigate);\n        }\n    }\n\n    const checkErrors = () => {\n        // setValid(episodeForm.name == null);\n    }\n\n    return episodeForm ? (\n        <div className=\"episodes-container\">\n            <EpisodesTitle />\n\n            <div className=\"form-container\">\n                <div className=\"title\">\n                    <h2>Novo Episódio</h2>\n                </div>\n                <form className=\"episodes-form\" onSubmit={hadleSubmit}>\n                    <FormInput\n                        className=\"input\"\n                        name=\"name\"\n                        type=\"text\"\n                        value={episodeForm.name}\n                        required\n                        label=\"Nome\"\n                        placeholder=\"Nome do Episódio\"\n                        handleChange={handleChange} />\n\n                    <FormInput\n                        name=\"description\"\n                        multiline\n                        className=\"input\"\n                        type=\"text\"\n                        value={episodeForm.description}\n                        required\n                        label=\"Descrição\"\n                        placeholder=\"Descrição\"\n                        handleChange={handleChange} />\n\n                    <FormInput\n                        name=\"imageUrl\"\n                        className=\"input\"\n                        type=\"text\"\n                        value={episodeForm.imageUrl}\n                        required\n                        label=\"Url da Imagem\"\n                        placeholder=\"Url\"\n                        handleChange={handleChange} />\n\n                    <FormInput\n                        name=\"episodeNumber\"\n                        className=\"input\"\n                        type=\"text\"\n                        value={episodeForm.episodeNumber}\n                        required\n                        label=\"Número do episódio\"\n                        placeholder=\"Número\"\n                        handleChange={handleChange} />\n\n                    <FormInput\n                        name=\"time\"\n                        className=\"input\"\n                        type=\"text\"\n                        value={episodeForm.time}\n                        required\n                        label=\"Duração\"\n                        placeholder=\"Duração\"\n                        handleChange={handleChange} />\n\n                    <FormInput\n                        name=\"date\"\n                        className=\"input\"\n                        type=\"text\"\n                        value={episodeForm.date}\n                        required\n                        label=\"Data de lançamento\"\n                        placeholder=\"Data\"\n                        handleChange={handleChange} />\n\n                    <FormInput\n                        name=\"episodeSrc\"\n                        className=\"input\"\n                        type=\"text\"\n                        value={episodeForm.episodeSrc}\n                        required\n                        label=\"Link do Episódio\"\n                        placeholder=\"Link\"\n                        handleChange={handleChange} />\n\n                    <FormControlLabel control={\n                        <Checkbox\n                            name=\"isHighlighted\"\n                            checked={episodeForm.isHighlighted} />}\n                        label=\"Destaque\"\n                        onChange={handleCheckChange} />\n\n                    <CustomButton\n                        type=\"submit\"\n                        value=\"Submit Form\"\n                        color=\"primary\"\n                        variant=\"contained\">\n                        {id ? 'Atualizar' : 'Cadastrar'}\n                    </CustomButton>\n\n                </form>\n            </div>\n        </div>\n    ) : null;\n};\n\nexport default EpisodesForm;"],"sourceRoot":""}